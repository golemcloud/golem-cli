name: CI
on:
  push:
    # TODO: Tag and publishing is not enabled until merging history
    # tags:
    # - "v*.*.*"
    branches:
    - main
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  checks: write
  pull-requests: write

env:
  BUILD_TARGET: "x86_64-unknown-linux-gnu"

jobs:
  build-and-test:
    runs-on: ubuntu-latest-xlarge
    env:
      CARGO_BUILD_JOBS: 6
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 1
        submodules: recursive
    - name: Fetch tag
      run: git fetch origin --deepen=1
    - name: Setup Rust
      run: rustup update stable --no-self-update && rustup default stable
    - uses: davidB/rust-cargo-make@v1
    - uses: cargo-bins/cargo-binstall@main
    - name: Install cargo-component
      run: cargo binstall --no-confirm cargo-component@0.20.0
    - name: Install wasm-tools
      run: cargo binstall --force --locked wasm-tools@1.223.0
    - name: Install wit-bindgen
      run: cargo binstall --force --locked wit-bindgen-cli@0.37.0
    - name: Install Protoc
      uses: arduino/setup-protoc@v3
      with:
        repo-token: ${{ secrets.GITHUB_TOKEN }}
    - name: Install componentize-py
      run: pip install componentize-py==0.16.0
    - name: Install WASI SDK
      run: |
        WASI_VERSION=25
        WASI_SDK_PATH=/opt/wasi-sdk
        wget https://github.com/WebAssembly/wasi-sdk/releases/download/wasi-sdk-${WASI_VERSION}/wasi-sdk-${WASI_VERSION}.0-x86_64-linux.tar.gz
        tar -xvf wasi-sdk-${WASI_VERSION}.0-x86_64-linux.tar.gz
        sudo mv wasi-sdk-${WASI_VERSION}.0-x86_64-linux ${WASI_SDK_PATH}
        echo "WASI_SDK_PATH=${WASI_SDK_PATH}" >> $GITHUB_ENV
    - uses: mlugg/setup-zig@v1
    - uses: actions/setup-go@v5.3.0
    - uses: acifani/setup-tinygo@v2.0.0
      with:
        tinygo-version: '0.35.0'
    - uses: Swatinem/rust-cache@v2
      with:
        shared-key: debug
        cache-all-crates: true
        save-if: true
    - name: Build all targets
      run: cargo make --profile ci build
    - name: Install golem-cli globally
      run: mv target/debug/golem-cli /usr/local/bin
    - name: Unit tests
      run: cargo make --profile ci unit-tests
    - name: Integration tests
      run: cargo make --profile ci integration-tests
    - name: Check formatting and clippy rules
      run: cargo make --profile ci check
    - name: Publish Test Report
      uses: mikepenz/action-junit-report@v4
      if: always()
      with:
        report_paths: '**/target/report-*.xml'
        detailed_summary: true
        include_passed: true
